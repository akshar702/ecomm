{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"./token-storage.service\";\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(_api, _token) {\n      this._api = _api;\n      this._token = _token;\n      this.userSubject = new BehaviorSubject(this._token.getUser());\n      this.user = this.userSubject.asObservable();\n    }\n    getUser() {\n      console.log(this.userSubject);\n      console.log(this.userSubject.value);\n      return this.userSubject.value;\n    }\n    login(credentials) {\n      return this._api.postTypeRequest('auth/login', {\n        email: credentials.email,\n        password: credentials.password\n      }).pipe(map(res => {\n        let user = {\n          email: credentials.email,\n          token: res.token\n        };\n        this._token.setToken(res.token);\n        this._token.setUser(res.data[0]);\n        console.log(res);\n        this.userSubject.next(user);\n        return user;\n      }));\n    }\n    register(user) {\n      return this._api.postTypeRequest('auth/register', {\n        fullName: user.fullName,\n        email: user.email,\n        password: user.password\n      });\n    }\n    logout() {\n      this._token.clearStorage();\n      this.userSubject.next(null);\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.TokenStorageService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}